diff --git a/vendor/phayes/geophp/geoPHP.inc b/vendor/phayes/geophp/geoPHP.inc
index 3802bb8..763b473 100644
--- a/vendor/phayes/geophp/geoPHP.inc
+++ b/vendor/phayes/geophp/geoPHP.inc
@@ -30,6 +30,9 @@
 include_once("lib/geometry/MultiLineString.class.php");
 include_once("lib/geometry/MultiPolygon.class.php");
 include_once("lib/geometry/GeometryCollection.class.php");
+include_once("lib/geometry/Circle.class.php");
+include_once("lib/geometry/MultiCircle.class.php");
+
 
 class geoPHP
 {
@@ -42,10 +45,8 @@ static function version() {
   // if $data is an array, all passed in values will be combined into a single geometry
   static function load() {
     $args = func_get_args();
-
     $data = array_shift($args);
     $type = array_shift($args);
-
     $type_map = geoPHP::getAdapterMap();
 
     // Auto-detect type if needed
@@ -69,6 +70,7 @@ static function load() {
 
     if (!$processor_type) {
       throw new exception('geoPHP could not find an adapter of type '.htmlentities($type));
+      exit;
     }
 
     $processor = new $processor_type();
@@ -77,7 +79,7 @@ static function load() {
     if (!is_array($data)) {
       $result = call_user_func_array(array($processor, "read"), array_merge(array($data), $args));
     }
-    // Data is an array, combine all passed in items into a single geometry
+    // Data is an array, combine all passed in items into a single geomtetry
     else {
       $geoms = array();
       foreach ($data as $item) {
@@ -114,6 +116,8 @@ static function geometryList() {
       'multilinestring' => 'MultiLineString',
       'multipolygon' => 'MultiPolygon',
       'geometrycollection' => 'GeometryCollection',
+      'circle' => 'Circle',
+      'multicircle' => 'MultiCircle',
     );
   }
 
@@ -153,7 +157,7 @@ static function geometryReduce($geometry) {
 
     // If the geometry cannot even theoretically be reduced more, then pass it back
     if (gettype($geometry) == 'object') {
-      $passbacks = array('Point','LineString','Polygon');
+      $passbacks = array('Point','LineString','Polygon','Circle');
       if (in_array($geometry->geometryType(),$passbacks)) {
         return $geometry;
       }
@@ -162,7 +166,7 @@ static function geometryReduce($geometry) {
     // If it is a mutlti-geometry, check to see if it just has one member
     // If it does, then pass the member, if not, then just pass back the geometry
     if (gettype($geometry) == 'object') {
-      $simple_collections = array('MultiPoint','MultiLineString','MultiPolygon');
+      $simple_collections = array('MultiPoint','MultiLineString','MultiPolygon','MultiCircle');
       if (in_array(get_class($geometry),$passbacks)) {
         $components = $geometry->getComponents();
         if (count($components) == 1) {
@@ -182,7 +186,7 @@ static function geometryReduce($geometry) {
     $geometries = array();
     $geom_types = array();
 
-    $collections = array('MultiPoint','MultiLineString','MultiPolygon','GeometryCollection');
+    $collections = array('MultiPoint','MultiLineString','MultiPolygon','GeometryCollection','MultiCircle');
 
     foreach ($geometry as $item) {
       if ($item) {
@@ -265,7 +269,7 @@ static function detectFormat(&$input) {
     }
 
     // Detect WKT - first char starts with P (80), L (76), M (77), or G (71)
-    $wkt_chars = array(80, 76, 77, 71);
+    $wkt_chars = array(80, 76, 77, 71, 67);
     if (in_array($bytes[1], $wkt_chars)) {
       return 'wkt';
     }
@@ -288,6 +292,7 @@ static function detectFormat(&$input) {
 
     // Detect geohash - geohash ONLY contains lowercase chars and numerics
     preg_match('/[a-z0-9]+/', $string, $matches);
+
     if ($matches[0] == $string) {
       return 'geohash';
     }
